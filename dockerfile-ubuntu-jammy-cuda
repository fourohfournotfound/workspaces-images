ARG BASE_TAG="1.15.0"
ARG BASE_IMAGE="ubuntu-jammy-desktop"
FROM kasmweb/$BASE_IMAGE:$BASE_TAG

USER root

ENV HOME /home/kasm-default-profile
ENV STARTUPDIR /dockerstartup
WORKDIR $HOME

### Envrionment config
ENV DEBIAN_FRONTEND=noninteractive \
    SKIP_CLEAN=true \
    KASM_RX_HOME=$STARTUPDIR/kasmrx \
    DONT_PROMPT_WSL_INSTALL="No_Prompt_please" \
    INST_DIR=$STARTUPDIR/install \
    INST_SCRIPTS="/ubuntu/install/tools/install_tools_deluxe.sh \
                  /ubuntu/install/misc/install_tools.sh \
                  /ubuntu/install/chrome/install_chrome.sh \
                  /ubuntu/install/chromium/install_chromium.sh \
                  /ubuntu/install/firefox/install_firefox.sh \
                  /ubuntu/install/sublime_text/install_sublime_text.sh \
                  /ubuntu/install/vs_code/install_vs_code.sh \
                  /ubuntu/install/nextcloud/install_nextcloud.sh \
                  /ubuntu/install/remmina/install_remmina.sh \
                  /ubuntu/install/only_office/install_only_office.sh \
                  /ubuntu/install/gimp/install_gimp.sh \
                  /ubuntu/install/ansible/install_ansible.sh \
                  /ubuntu/install/terraform/install_terraform.sh \
                  /ubuntu/install/telegram/install_telegram.sh \
                  /ubuntu/install/thunderbird/install_thunderbird.sh \
                  /ubuntu/install/slack/install_slack.sh \
                  /ubuntu/install/gamepad_utils/install_gamepad_utils.sh \
                  /ubuntu/install/miniconda/install_anaconda.sh \
                  /ubuntu/install/cleanup/cleanup.sh" 

# Copy install scripts
COPY ./src/ $INST_DIR

# Run installations
RUN \
  for SCRIPT in $INST_SCRIPTS; do \
    bash ${INST_DIR}${SCRIPT} || exit 1; \
  done && \
  $STARTUPDIR/set_user_permission.sh $HOME && \
  rm -f /etc/X11/xinit/Xclients && \
  chown 1000:0 $HOME && \
  mkdir -p /home/kasm-user && \
  chown -R 1000:0 /home/kasm-user && \
  rm -Rf ${INST_DIR}

# add kasm user to sudo and set password
RUN apt-get install openssl -y
RUN usermod -aG sudo kasm-user
RUN echo "kasm-user:Hs2b#%totJXc%m" | chpasswd

RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.1-1_all.deb && dpkg -i cuda-keyring_1.1-1_all.deb
RUN apt-get update && apt-get install -y cuda-toolkit-12-2
ENV PATH /usr/local/nvidia/bin:/usr/local/cuda12.2/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64
RUN export PATH=/usr/local/cuda-12.2/bin${PATH:+:${PATH}}

#added to fix conda packages failing to install and pip sometimes 7-10-24
#RUN apt-get update && apt-get install -y software-properties-common
#RUN add-apt-repository ppa:ubuntu-toolchain-r/test
#RUN apt-get update && apt-get install -y libstdc++6
#ENV LD_LIBRARY_PATH /opt/conda/lib:$LD_LIBRARY_PATH

#tag with build date
ARG BUILD_DATE=$(date +%Y%m%d)
RUN echo "Build date: $BUILD_DATE"
CMD ["docker", "tag", "desktop-ml:latest", "desktop-ml:$BUILD_DATE"]

# Userspace Runtime
ENV HOME /home/kasm-user
WORKDIR $HOME
USER 1000

CMD ["--tail-log"]
